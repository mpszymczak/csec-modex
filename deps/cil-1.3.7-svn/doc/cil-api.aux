\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}Module {\tt  {Pretty}} : Utility functions for pretty-printing.}{1}}
\newlabel{module:Pretty}{{1}{1}}
\newlabel{type:Pretty.doc}{{1}{2}}
\newlabel{val:Pretty.nil}{{1}{2}}
\newlabel{val:Pretty.(-plus-plus)}{{1}{2}}
\newlabel{val:Pretty.concat}{{1}{2}}
\newlabel{val:Pretty.text}{{1}{2}}
\newlabel{val:Pretty.num}{{1}{2}}
\newlabel{val:Pretty.num64}{{1}{2}}
\newlabel{val:Pretty.real}{{1}{2}}
\newlabel{val:Pretty.chr}{{1}{2}}
\newlabel{val:Pretty.line}{{1}{2}}
\newlabel{val:Pretty.leftflush}{{1}{3}}
\newlabel{val:Pretty.break}{{1}{3}}
\newlabel{val:Pretty.align}{{1}{3}}
\newlabel{val:Pretty.unalign}{{1}{3}}
\newlabel{val:Pretty.mark}{{1}{3}}
\newlabel{val:Pretty.unmark}{{1}{3}}
\newlabel{val:Pretty.indent}{{1}{3}}
\newlabel{val:Pretty.markup}{{1}{3}}
\newlabel{val:Pretty.seq}{{1}{3}}
\newlabel{val:Pretty.docList}{{1}{3}}
\newlabel{val:Pretty.d-underscorelist}{{1}{3}}
\newlabel{val:Pretty.docArray}{{1}{4}}
\newlabel{val:Pretty.docOpt}{{1}{4}}
\newlabel{val:Pretty.d-underscoreint32}{{1}{4}}
\newlabel{val:Pretty.f-underscoreint32}{{1}{4}}
\newlabel{val:Pretty.d-underscoreint64}{{1}{4}}
\newlabel{val:Pretty.f-underscoreint64}{{1}{4}}
\newlabel{module:Pretty.MakeMapPrinter}{{1}{4}}
\newlabel{type:Pretty.MakeMapPrinter.key}{{1}{4}}
\newlabel{type:Pretty.MakeMapPrinter.t}{{1}{4}}
\newlabel{val:Pretty.MakeMapPrinter.fold}{{1}{4}}
\newlabel{val:Pretty.MakeMapPrinter.docMap}{{1}{4}}
\newlabel{val:Pretty.MakeMapPrinter.d-underscoremap}{{1}{4}}
\newlabel{module:Pretty.MakeSetPrinter}{{1}{4}}
\newlabel{type:Pretty.MakeSetPrinter.elt}{{1}{4}}
\newlabel{type:Pretty.MakeSetPrinter.t}{{1}{4}}
\newlabel{val:Pretty.MakeSetPrinter.fold}{{1}{4}}
\newlabel{val:Pretty.MakeSetPrinter.docSet}{{1}{5}}
\newlabel{val:Pretty.MakeSetPrinter.d-underscoreset}{{1}{5}}
\newlabel{val:Pretty.insert}{{1}{5}}
\newlabel{val:Pretty.dprintf}{{1}{5}}
\newlabel{val:Pretty.gprintf}{{1}{6}}
\newlabel{val:Pretty.fprint}{{1}{6}}
\newlabel{val:Pretty.sprint}{{1}{6}}
\newlabel{val:Pretty.fprintf}{{1}{6}}
\newlabel{val:Pretty.printf}{{1}{6}}
\newlabel{val:Pretty.eprintf}{{1}{6}}
\newlabel{val:Pretty.withPrintDepth}{{1}{6}}
\newlabel{val:Pretty.printDepth}{{1}{6}}
\newlabel{val:Pretty.printIndent}{{1}{6}}
\newlabel{val:Pretty.fastMode}{{1}{6}}
\newlabel{val:Pretty.flushOften}{{1}{6}}
\newlabel{val:Pretty.countNewLines}{{1}{7}}
\newlabel{val:Pretty.auto-underscoreprinter}{{1}{7}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Module {\tt  {Errormsg}} : Utility functions for error-reporting}{7}}
\newlabel{module:Errormsg}{{2}{7}}
\newlabel{val:Errormsg.logChannel}{{2}{7}}
\newlabel{val:Errormsg.debugFlag}{{2}{7}}
\newlabel{val:Errormsg.verboseFlag}{{2}{7}}
\newlabel{val:Errormsg.colorFlag}{{2}{7}}
\newlabel{val:Errormsg.redEscStr}{{2}{7}}
\newlabel{val:Errormsg.greenEscStr}{{2}{7}}
\newlabel{val:Errormsg.yellowEscStr}{{2}{7}}
\newlabel{val:Errormsg.blueEscStr}{{2}{7}}
\newlabel{val:Errormsg.purpleEscStr}{{2}{7}}
\newlabel{val:Errormsg.cyanEscStr}{{2}{7}}
\newlabel{val:Errormsg.whiteEscStr}{{2}{7}}
\newlabel{val:Errormsg.resetEscStr}{{2}{7}}
\newlabel{val:Errormsg.warnFlag}{{2}{7}}
\newlabel{exception:Errormsg.Error}{{2}{7}}
\newlabel{val:Errormsg.error}{{2}{7}}
\newlabel{val:Errormsg.bug}{{2}{7}}
\newlabel{val:Errormsg.unimp}{{2}{7}}
\newlabel{val:Errormsg.s}{{2}{8}}
\newlabel{val:Errormsg.hadErrors}{{2}{8}}
\newlabel{val:Errormsg.warn}{{2}{8}}
\newlabel{val:Errormsg.warnOpt}{{2}{8}}
\newlabel{val:Errormsg.log}{{2}{8}}
\newlabel{val:Errormsg.logg}{{2}{8}}
\newlabel{val:Errormsg.null}{{2}{8}}
\newlabel{val:Errormsg.pushContext}{{2}{8}}
\newlabel{val:Errormsg.popContext}{{2}{8}}
\newlabel{val:Errormsg.showContext}{{2}{8}}
\newlabel{val:Errormsg.withContext}{{2}{8}}
\newlabel{val:Errormsg.newline}{{2}{8}}
\newlabel{val:Errormsg.newHline}{{2}{8}}
\newlabel{val:Errormsg.getPosition}{{2}{8}}
\newlabel{val:Errormsg.getHPosition}{{2}{8}}
\newlabel{val:Errormsg.setHLine}{{2}{8}}
\newlabel{val:Errormsg.setHFile}{{2}{8}}
\newlabel{val:Errormsg.setCurrentLine}{{2}{8}}
\newlabel{val:Errormsg.setCurrentFile}{{2}{8}}
\newlabel{type:Errormsg.location}{{2}{8}}
\newlabel{val:Errormsg.d-underscoreloc}{{2}{9}}
\newlabel{val:Errormsg.d-underscorehloc}{{2}{9}}
\newlabel{val:Errormsg.getLocation}{{2}{9}}
\newlabel{val:Errormsg.parse-underscoreerror}{{2}{9}}
\newlabel{val:Errormsg.locUnknown}{{2}{9}}
\newlabel{val:Errormsg.readingFromStdin}{{2}{9}}
\newlabel{val:Errormsg.startParsing}{{2}{9}}
\newlabel{val:Errormsg.startParsingFromString}{{2}{9}}
\newlabel{val:Errormsg.finishParsing}{{2}{9}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Module {\tt  {Clist}} : Utilities for managing "concatenable lists" (clists).}{9}}
\newlabel{module:Clist}{{3}{9}}
\newlabel{type:Clist.clist}{{3}{9}}
\newlabel{val:Clist.toList}{{3}{10}}
\newlabel{val:Clist.fromList}{{3}{10}}
\newlabel{val:Clist.single}{{3}{10}}
\newlabel{val:Clist.empty}{{3}{10}}
\newlabel{val:Clist.append}{{3}{10}}
\newlabel{val:Clist.checkBeforeAppend}{{3}{10}}
\newlabel{val:Clist.length}{{3}{10}}
\newlabel{val:Clist.map}{{3}{10}}
\newlabel{val:Clist.fold-underscoreleft}{{3}{10}}
\newlabel{val:Clist.iter}{{3}{10}}
\newlabel{val:Clist.rev}{{3}{10}}
\newlabel{val:Clist.docCList}{{3}{10}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Module {\tt  {Stats}} : Utilities for maintaining timing statistics}{11}}
\newlabel{module:Stats}{{4}{11}}
\newlabel{type:Stats.timerModeEnum}{{4}{11}}
\newlabel{val:Stats.reset}{{4}{11}}
\newlabel{exception:Stats.NoPerfCount}{{4}{11}}
\newlabel{val:Stats.countCalls}{{4}{11}}
\newlabel{val:Stats.has-underscoreperformance-underscorecounters}{{4}{11}}
\newlabel{val:Stats.sample-underscorepentium-underscoreperfcount-underscore20}{{4}{11}}
\newlabel{val:Stats.sample-underscorepentium-underscoreperfcount-underscore10}{{4}{11}}
\newlabel{val:Stats.time}{{4}{11}}
\newlabel{val:Stats.repeattime}{{4}{11}}
\newlabel{val:Stats.print}{{4}{12}}
\newlabel{val:Stats.lookupTime}{{4}{12}}
\newlabel{val:Stats.timethis}{{4}{12}}
\newlabel{val:Stats.lastTime}{{4}{12}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Module {\tt  {Cil}} : {\bf  CIL API Documentation.}}{12}}
\newlabel{module:Cil}{{5}{12}}
\newlabel{val:Cil.initCIL}{{5}{12}}
\newlabel{val:Cil.cilVersion}{{5}{12}}
\newlabel{val:Cil.cilVersionMajor}{{5}{12}}
\newlabel{val:Cil.cilVersionMinor}{{5}{12}}
\newlabel{val:Cil.cilVersionRevision}{{5}{12}}
\newlabel{type:Cil.file}{{5}{12}}
\newlabel{type:Cil.comment}{{5}{13}}
\newlabel{type:Cil.global}{{5}{13}}
\newlabel{type:Cil.typ}{{5}{14}}
\newlabel{type:Cil.ikind}{{5}{15}}
\newlabel{type:Cil.fkind}{{5}{16}}
\newlabel{type:Cil.attribute}{{5}{16}}
\newlabel{type:Cil.attributes}{{5}{17}}
\newlabel{type:Cil.attrparam}{{5}{17}}
\newlabel{type:Cil.compinfo}{{5}{18}}
\newlabel{type:Cil.fieldinfo}{{5}{18}}
\newlabel{type:Cil.enuminfo}{{5}{19}}
\newlabel{type:Cil.typeinfo}{{5}{19}}
\newlabel{type:Cil.varinfo}{{5}{20}}
\newlabel{type:Cil.storage}{{5}{21}}
\newlabel{type:Cil.exp}{{5}{22}}
\newlabel{type:Cil.constant}{{5}{23}}
\newlabel{type:Cil.unop}{{5}{23}}
\newlabel{type:Cil.binop}{{5}{24}}
\newlabel{type:Cil.lval}{{5}{26}}
\newlabel{type:Cil.lhost}{{5}{26}}
\newlabel{type:Cil.offset}{{5}{26}}
\newlabel{type:Cil.init}{{5}{26}}
\newlabel{type:Cil.initinfo}{{5}{27}}
\newlabel{type:Cil.fundec}{{5}{27}}
\newlabel{type:Cil.block}{{5}{28}}
\newlabel{type:Cil.stmt}{{5}{28}}
\newlabel{type:Cil.label}{{5}{29}}
\newlabel{type:Cil.stmtkind}{{5}{29}}
\newlabel{type:Cil.instr}{{5}{30}}
\newlabel{type:Cil.location}{{5}{31}}
\newlabel{type:Cil.typsig}{{5}{31}}
\newlabel{val:Cil.lowerConstants}{{5}{31}}
\newlabel{val:Cil.insertImplicitCasts}{{5}{31}}
\newlabel{type:Cil.featureDescr}{{5}{31}}
\newlabel{val:Cil.compareLoc}{{5}{32}}
\newlabel{val:Cil.emptyFunction}{{5}{32}}
\newlabel{val:Cil.setFormals}{{5}{32}}
\newlabel{val:Cil.setFunctionType}{{5}{32}}
\newlabel{val:Cil.setFunctionTypeMakeFormals}{{5}{32}}
\newlabel{val:Cil.setMaxId}{{5}{32}}
\newlabel{val:Cil.dummyFunDec}{{5}{32}}
\newlabel{val:Cil.dummyFile}{{5}{33}}
\newlabel{val:Cil.saveBinaryFile}{{5}{33}}
\newlabel{val:Cil.saveBinaryFileChannel}{{5}{33}}
\newlabel{val:Cil.loadBinaryFile}{{5}{33}}
\newlabel{val:Cil.getGlobInit}{{5}{33}}
\newlabel{val:Cil.iterGlobals}{{5}{33}}
\newlabel{val:Cil.foldGlobals}{{5}{33}}
\newlabel{val:Cil.mapGlobals}{{5}{33}}
\newlabel{val:Cil.findOrCreateFunc}{{5}{33}}
\newlabel{val:Cil.new-underscoresid}{{5}{33}}
\newlabel{val:Cil.prepareCFG}{{5}{33}}
\newlabel{val:Cil.computeCFGInfo}{{5}{34}}
\newlabel{val:Cil.copyFunction}{{5}{34}}
\newlabel{val:Cil.pushGlobal}{{5}{34}}
\newlabel{val:Cil.invalidStmt}{{5}{34}}
\newlabel{val:Cil.builtinFunctions}{{5}{34}}
\newlabel{val:Cil.builtinLoc}{{5}{34}}
\newlabel{val:Cil.makeZeroInit}{{5}{34}}
\newlabel{val:Cil.foldLeftCompound}{{5}{34}}
\newlabel{val:Cil.voidType}{{5}{35}}
\newlabel{val:Cil.isVoidType}{{5}{35}}
\newlabel{val:Cil.isVoidPtrType}{{5}{35}}
\newlabel{val:Cil.intType}{{5}{35}}
\newlabel{val:Cil.uintType}{{5}{35}}
\newlabel{val:Cil.longType}{{5}{35}}
\newlabel{val:Cil.ulongType}{{5}{35}}
\newlabel{val:Cil.charType}{{5}{35}}
\newlabel{val:Cil.charPtrType}{{5}{35}}
\newlabel{val:Cil.wcharKind}{{5}{36}}
\newlabel{val:Cil.wcharType}{{5}{36}}
\newlabel{val:Cil.charConstPtrType}{{5}{36}}
\newlabel{val:Cil.voidPtrType}{{5}{36}}
\newlabel{val:Cil.intPtrType}{{5}{36}}
\newlabel{val:Cil.uintPtrType}{{5}{36}}
\newlabel{val:Cil.doubleType}{{5}{36}}
\newlabel{val:Cil.upointType}{{5}{36}}
\newlabel{val:Cil.typeOfSizeOf}{{5}{36}}
\newlabel{val:Cil.kindOfSizeOf}{{5}{36}}
\newlabel{val:Cil.isSigned}{{5}{36}}
\newlabel{val:Cil.mkCompInfo}{{5}{36}}
\newlabel{val:Cil.copyCompInfo}{{5}{36}}
\newlabel{val:Cil.missingFieldName}{{5}{37}}
\newlabel{val:Cil.compFullName}{{5}{37}}
\newlabel{val:Cil.isCompleteType}{{5}{37}}
\newlabel{val:Cil.unrollType}{{5}{37}}
\newlabel{val:Cil.unrollTypeDeep}{{5}{37}}
\newlabel{val:Cil.separateStorageModifiers}{{5}{37}}
\newlabel{val:Cil.isIntegralType}{{5}{37}}
\newlabel{val:Cil.isArithmeticType}{{5}{37}}
\newlabel{val:Cil.isPointerType}{{5}{37}}
\newlabel{val:Cil.isScalarType}{{5}{37}}
\newlabel{val:Cil.isFunctionType}{{5}{37}}
\newlabel{val:Cil.argsToList}{{5}{37}}
\newlabel{val:Cil.isArrayType}{{5}{37}}
\newlabel{exception:Cil.LenOfArray}{{5}{38}}
\newlabel{val:Cil.lenOfArray}{{5}{38}}
\newlabel{val:Cil.getCompField}{{5}{38}}
\newlabel{type:Cil.existsAction}{{5}{38}}
\newlabel{val:Cil.existsType}{{5}{38}}
\newlabel{val:Cil.splitFunctionType}{{5}{38}}
\newlabel{val:Cil.splitFunctionTypeVI}{{5}{38}}
\newlabel{val:Cil.d-underscoretypsig}{{5}{39}}
\newlabel{val:Cil.typeSig}{{5}{39}}
\newlabel{val:Cil.typeSigWithAttrs}{{5}{39}}
\newlabel{val:Cil.setTypeSigAttrs}{{5}{39}}
\newlabel{val:Cil.typeSigAttrs}{{5}{39}}
\newlabel{val:Cil.makeVarinfo}{{5}{39}}
\newlabel{val:Cil.makeFormalVar}{{5}{39}}
\newlabel{val:Cil.makeLocalVar}{{5}{39}}
\newlabel{val:Cil.makeTempVar}{{5}{39}}
\newlabel{val:Cil.makeGlobalVar}{{5}{40}}
\newlabel{val:Cil.copyVarinfo}{{5}{40}}
\newlabel{val:Cil.newVID}{{5}{40}}
\newlabel{val:Cil.addOffsetLval}{{5}{40}}
\newlabel{val:Cil.addOffset}{{5}{40}}
\newlabel{val:Cil.removeOffsetLval}{{5}{40}}
\newlabel{val:Cil.removeOffset}{{5}{40}}
\newlabel{val:Cil.typeOfLval}{{5}{40}}
\newlabel{val:Cil.typeOffset}{{5}{40}}
\newlabel{val:Cil.zero}{{5}{40}}
\newlabel{val:Cil.one}{{5}{40}}
\newlabel{val:Cil.mone}{{5}{41}}
\newlabel{val:Cil.kintegerCilint}{{5}{41}}
\newlabel{val:Cil.kinteger64}{{5}{41}}
\newlabel{val:Cil.kinteger}{{5}{41}}
\newlabel{val:Cil.integer}{{5}{41}}
\newlabel{val:Cil.getInteger}{{5}{41}}
\newlabel{val:Cil.i64-underscoreto-underscoreint}{{5}{41}}
\newlabel{val:Cil.cilint-underscoreto-underscoreint}{{5}{41}}
\newlabel{val:Cil.isConstant}{{5}{41}}
\newlabel{val:Cil.isConstantOffset}{{5}{41}}
\newlabel{val:Cil.isZero}{{5}{41}}
\newlabel{val:Cil.charConstToInt}{{5}{41}}
\newlabel{val:Cil.constFold}{{5}{41}}
\newlabel{val:Cil.constFoldBinOp}{{5}{42}}
\newlabel{val:Cil.increm}{{5}{42}}
\newlabel{val:Cil.var}{{5}{42}}
\newlabel{val:Cil.mkAddrOf}{{5}{42}}
\newlabel{val:Cil.mkAddrOrStartOf}{{5}{42}}
\newlabel{val:Cil.mkMem}{{5}{42}}
\newlabel{val:Cil.mkString}{{5}{42}}
\newlabel{val:Cil.mkCastT}{{5}{42}}
\newlabel{val:Cil.mkCast}{{5}{42}}
\newlabel{val:Cil.stripCasts}{{5}{42}}
\newlabel{val:Cil.typeOf}{{5}{42}}
\newlabel{val:Cil.parseInt}{{5}{42}}
\newlabel{val:Cil.mkStmt}{{5}{43}}
\newlabel{val:Cil.mkBlock}{{5}{43}}
\newlabel{val:Cil.mkStmtOneInstr}{{5}{43}}
\newlabel{val:Cil.compactStmts}{{5}{43}}
\newlabel{val:Cil.mkEmptyStmt}{{5}{43}}
\newlabel{val:Cil.dummyInstr}{{5}{43}}
\newlabel{val:Cil.dummyStmt}{{5}{43}}
\newlabel{val:Cil.mkWhile}{{5}{43}}
\newlabel{val:Cil.mkForIncr}{{5}{43}}
\newlabel{val:Cil.mkFor}{{5}{43}}
\newlabel{type:Cil.attributeClass}{{5}{43}}
\newlabel{val:Cil.attributeHash}{{5}{44}}
\newlabel{val:Cil.partitionAttributes}{{5}{44}}
\newlabel{val:Cil.addAttribute}{{5}{44}}
\newlabel{val:Cil.addAttributes}{{5}{44}}
\newlabel{val:Cil.dropAttribute}{{5}{44}}
\newlabel{val:Cil.dropAttributes}{{5}{44}}
\newlabel{val:Cil.filterAttributes}{{5}{44}}
\newlabel{val:Cil.hasAttribute}{{5}{44}}
\newlabel{val:Cil.typeAttrs}{{5}{44}}
\newlabel{val:Cil.setTypeAttrs}{{5}{45}}
\newlabel{val:Cil.typeAddAttributes}{{5}{45}}
\newlabel{val:Cil.typeRemoveAttributes}{{5}{45}}
\newlabel{val:Cil.expToAttrParam}{{5}{45}}
\newlabel{exception:Cil.NotAnAttrParam}{{5}{45}}
\newlabel{type:Cil.visitAction}{{5}{45}}
\newlabel{classtype:Cil.cilVisitor}{{5}{45}}
\newlabel{method:Cil.cilVisitor.vvdec}{{5}{45}}
\newlabel{method:Cil.cilVisitor.vvrbl}{{5}{45}}
\newlabel{method:Cil.cilVisitor.vexpr}{{5}{46}}
\newlabel{method:Cil.cilVisitor.vlval}{{5}{46}}
\newlabel{method:Cil.cilVisitor.voffs}{{5}{46}}
\newlabel{method:Cil.cilVisitor.vinitoffs}{{5}{46}}
\newlabel{method:Cil.cilVisitor.vinst}{{5}{46}}
\newlabel{method:Cil.cilVisitor.vstmt}{{5}{46}}
\newlabel{method:Cil.cilVisitor.vblock}{{5}{46}}
\newlabel{method:Cil.cilVisitor.vfunc}{{5}{46}}
\newlabel{method:Cil.cilVisitor.vglob}{{5}{46}}
\newlabel{method:Cil.cilVisitor.vinit}{{5}{46}}
\newlabel{method:Cil.cilVisitor.vtype}{{5}{46}}
\newlabel{method:Cil.cilVisitor.vattr}{{5}{46}}
\newlabel{method:Cil.cilVisitor.vattrparam}{{5}{47}}
\newlabel{method:Cil.cilVisitor.queueInstr}{{5}{47}}
\newlabel{method:Cil.cilVisitor.unqueueInstr}{{5}{47}}
\newlabel{class:Cil.nopCilVisitor}{{5}{47}}
\newlabel{val:Cil.visitCilFile}{{5}{47}}
\newlabel{val:Cil.visitCilFileSameGlobals}{{5}{47}}
\newlabel{val:Cil.visitCilGlobal}{{5}{47}}
\newlabel{val:Cil.visitCilFunction}{{5}{47}}
\newlabel{val:Cil.visitCilExpr}{{5}{47}}
\newlabel{val:Cil.visitCilLval}{{5}{47}}
\newlabel{val:Cil.visitCilOffset}{{5}{47}}
\newlabel{val:Cil.visitCilInitOffset}{{5}{48}}
\newlabel{val:Cil.visitCilInstr}{{5}{48}}
\newlabel{val:Cil.visitCilStmt}{{5}{48}}
\newlabel{val:Cil.visitCilBlock}{{5}{48}}
\newlabel{val:Cil.visitCilType}{{5}{48}}
\newlabel{val:Cil.visitCilVarDecl}{{5}{48}}
\newlabel{val:Cil.visitCilInit}{{5}{48}}
\newlabel{val:Cil.visitCilAttributes}{{5}{48}}
\newlabel{val:Cil.msvcMode}{{5}{48}}
\newlabel{val:Cil.useLogicalOperators}{{5}{48}}
\newlabel{val:Cil.oldstyleExternInline}{{5}{48}}
\newlabel{val:Cil.constFoldVisitor}{{5}{48}}
\newlabel{type:Cil.lineDirectiveStyle}{{5}{49}}
\newlabel{val:Cil.lineDirectiveStyle}{{5}{49}}
\newlabel{val:Cil.print-underscoreCIL-underscoreInput}{{5}{49}}
\newlabel{val:Cil.printCilAsIs}{{5}{49}}
\newlabel{val:Cil.lineLength}{{5}{49}}
\newlabel{val:Cil.forgcc}{{5}{49}}
\newlabel{val:Cil.currentLoc}{{5}{49}}
\newlabel{val:Cil.currentGlobal}{{5}{49}}
\newlabel{val:Cil.d-underscoreloc}{{5}{50}}
\newlabel{val:Cil.d-underscorethisloc}{{5}{50}}
\newlabel{val:Cil.d-underscoreikind}{{5}{50}}
\newlabel{val:Cil.d-underscorefkind}{{5}{50}}
\newlabel{val:Cil.d-underscorestorage}{{5}{50}}
\newlabel{val:Cil.d-underscoreconst}{{5}{50}}
\newlabel{val:Cil.derefStarLevel}{{5}{50}}
\newlabel{val:Cil.indexLevel}{{5}{50}}
\newlabel{val:Cil.arrowLevel}{{5}{50}}
\newlabel{val:Cil.addrOfLevel}{{5}{50}}
\newlabel{val:Cil.additiveLevel}{{5}{50}}
\newlabel{val:Cil.comparativeLevel}{{5}{50}}
\newlabel{val:Cil.bitwiseLevel}{{5}{50}}
\newlabel{val:Cil.getParenthLevel}{{5}{50}}
\newlabel{classtype:Cil.cilPrinter}{{5}{51}}
\newlabel{method:Cil.cilPrinter.setCurrentFormals}{{5}{51}}
\newlabel{method:Cil.cilPrinter.setPrintInstrTerminator}{{5}{51}}
\newlabel{method:Cil.cilPrinter.getPrintInstrTerminator}{{5}{51}}
\newlabel{method:Cil.cilPrinter.pVDecl}{{5}{51}}
\newlabel{method:Cil.cilPrinter.pVar}{{5}{51}}
\newlabel{method:Cil.cilPrinter.pLval}{{5}{51}}
\newlabel{method:Cil.cilPrinter.pOffset}{{5}{51}}
\newlabel{method:Cil.cilPrinter.pInstr}{{5}{51}}
\newlabel{method:Cil.cilPrinter.pLabel}{{5}{51}}
\newlabel{method:Cil.cilPrinter.pStmt}{{5}{51}}
\newlabel{method:Cil.cilPrinter.dStmt}{{5}{51}}
\newlabel{method:Cil.cilPrinter.dBlock}{{5}{51}}
\newlabel{method:Cil.cilPrinter.pBlock}{{5}{51}}
\newlabel{method:Cil.cilPrinter.pGlobal}{{5}{51}}
\newlabel{method:Cil.cilPrinter.dGlobal}{{5}{52}}
\newlabel{method:Cil.cilPrinter.pFieldDecl}{{5}{52}}
\newlabel{method:Cil.cilPrinter.pType}{{5}{52}}
\newlabel{method:Cil.cilPrinter.pAttr}{{5}{52}}
\newlabel{method:Cil.cilPrinter.pAttrParam}{{5}{52}}
\newlabel{method:Cil.cilPrinter.pAttrs}{{5}{52}}
\newlabel{method:Cil.cilPrinter.pLineDirective}{{5}{52}}
\newlabel{method:Cil.cilPrinter.pStmtKind}{{5}{52}}
\newlabel{method:Cil.cilPrinter.pExp}{{5}{52}}
\newlabel{method:Cil.cilPrinter.pInit}{{5}{52}}
\newlabel{method:Cil.cilPrinter.dInit}{{5}{53}}
\newlabel{class:Cil.defaultCilPrinterClass}{{5}{53}}
\newlabel{val:Cil.defaultCilPrinter}{{5}{53}}
\newlabel{class:Cil.plainCilPrinterClass}{{5}{53}}
\newlabel{val:Cil.plainCilPrinter}{{5}{53}}
\newlabel{classtype:Cil.descriptiveCilPrinter}{{5}{53}}
\newlabel{method:Cil.descriptiveCilPrinter.startTemps}{{5}{53}}
\newlabel{method:Cil.descriptiveCilPrinter.stopTemps}{{5}{53}}
\newlabel{method:Cil.descriptiveCilPrinter.pTemps}{{5}{53}}
\newlabel{class:Cil.descriptiveCilPrinterClass}{{5}{53}}
\newlabel{val:Cil.descriptiveCilPrinter}{{5}{53}}
\newlabel{val:Cil.printerForMaincil}{{5}{53}}
\newlabel{val:Cil.printType}{{5}{53}}
\newlabel{val:Cil.printExp}{{5}{53}}
\newlabel{val:Cil.printLval}{{5}{53}}
\newlabel{val:Cil.printGlobal}{{5}{54}}
\newlabel{val:Cil.printAttr}{{5}{54}}
\newlabel{val:Cil.printAttrs}{{5}{54}}
\newlabel{val:Cil.printInstr}{{5}{54}}
\newlabel{val:Cil.printStmt}{{5}{54}}
\newlabel{val:Cil.printBlock}{{5}{54}}
\newlabel{val:Cil.dumpStmt}{{5}{54}}
\newlabel{val:Cil.dumpBlock}{{5}{54}}
\newlabel{val:Cil.printInit}{{5}{54}}
\newlabel{val:Cil.dumpInit}{{5}{54}}
\newlabel{val:Cil.d-underscoretype}{{5}{54}}
\newlabel{val:Cil.d-underscoreexp}{{5}{54}}
\newlabel{val:Cil.d-underscorelval}{{5}{54}}
\newlabel{val:Cil.d-underscoreoffset}{{5}{54}}
\newlabel{val:Cil.d-underscoreinit}{{5}{55}}
\newlabel{val:Cil.d-underscorebinop}{{5}{55}}
\newlabel{val:Cil.d-underscoreunop}{{5}{55}}
\newlabel{val:Cil.d-underscoreattr}{{5}{55}}
\newlabel{val:Cil.d-underscoreattrparam}{{5}{55}}
\newlabel{val:Cil.d-underscoreattrlist}{{5}{55}}
\newlabel{val:Cil.d-underscoreinstr}{{5}{55}}
\newlabel{val:Cil.d-underscorelabel}{{5}{55}}
\newlabel{val:Cil.d-underscorestmt}{{5}{55}}
\newlabel{val:Cil.d-underscoreblock}{{5}{55}}
\newlabel{val:Cil.d-underscoreglobal}{{5}{55}}
\newlabel{val:Cil.dn-underscoreexp}{{5}{55}}
\newlabel{val:Cil.dn-underscorelval}{{5}{56}}
\newlabel{val:Cil.dn-underscoreinit}{{5}{56}}
\newlabel{val:Cil.dn-underscoretype}{{5}{56}}
\newlabel{val:Cil.dn-underscoreglobal}{{5}{56}}
\newlabel{val:Cil.dn-underscoreattrlist}{{5}{56}}
\newlabel{val:Cil.dn-underscoreattr}{{5}{56}}
\newlabel{val:Cil.dn-underscoreattrparam}{{5}{56}}
\newlabel{val:Cil.dn-underscorestmt}{{5}{56}}
\newlabel{val:Cil.dn-underscoreinstr}{{5}{56}}
\newlabel{val:Cil.d-underscoreshortglobal}{{5}{56}}
\newlabel{val:Cil.dumpGlobal}{{5}{56}}
\newlabel{val:Cil.dumpFile}{{5}{56}}
\newlabel{val:Cil.bug}{{5}{56}}
\newlabel{val:Cil.unimp}{{5}{56}}
\newlabel{val:Cil.error}{{5}{56}}
\newlabel{val:Cil.errorLoc}{{5}{56}}
\newlabel{val:Cil.warn}{{5}{56}}
\newlabel{val:Cil.warnOpt}{{5}{56}}
\newlabel{val:Cil.warnContext}{{5}{56}}
\newlabel{val:Cil.warnContextOpt}{{5}{56}}
\newlabel{val:Cil.warnLoc}{{5}{57}}
\newlabel{val:Cil.d-underscoreplainexp}{{5}{57}}
\newlabel{val:Cil.d-underscoreplaininit}{{5}{57}}
\newlabel{val:Cil.d-underscoreplainlval}{{5}{57}}
\newlabel{val:Cil.d-underscoreplaintype}{{5}{57}}
\newlabel{val:Cil.dd-underscoreexp}{{5}{57}}
\newlabel{val:Cil.dd-underscorelval}{{5}{57}}
\newlabel{val:Cil.uniqueVarNames}{{5}{57}}
\newlabel{val:Cil.peepHole2}{{5}{57}}
\newlabel{val:Cil.peepHole1}{{5}{58}}
\newlabel{exception:Cil.SizeOfError}{{5}{58}}
\newlabel{val:Cil.unsignedVersionOf}{{5}{58}}
\newlabel{val:Cil.signedVersionOf}{{5}{58}}
\newlabel{val:Cil.intRank}{{5}{58}}
\newlabel{val:Cil.commonIntKind}{{5}{58}}
\newlabel{val:Cil.intKindForSize}{{5}{58}}
\newlabel{val:Cil.floatKindForSize}{{5}{58}}
\newlabel{val:Cil.bytesSizeOfInt}{{5}{58}}
\newlabel{val:Cil.bitsSizeOf}{{5}{58}}
\newlabel{val:Cil.truncateCilint}{{5}{58}}
\newlabel{val:Cil.fitsInInt}{{5}{59}}
\newlabel{val:Cil.intKindForValue}{{5}{59}}
\newlabel{val:Cil.mkCilint}{{5}{59}}
\newlabel{val:Cil.sizeOf}{{5}{59}}
\newlabel{val:Cil.alignOf-underscoreint}{{5}{59}}
\newlabel{val:Cil.bitsOffset}{{5}{59}}
\newlabel{val:Cil.char-underscoreis-underscoreunsigned}{{5}{59}}
\newlabel{val:Cil.little-underscoreendian}{{5}{59}}
\newlabel{val:Cil.underscore-underscorename}{{5}{59}}
\newlabel{val:Cil.locUnknown}{{5}{59}}
\newlabel{val:Cil.get-underscoreinstrLoc}{{5}{59}}
\newlabel{val:Cil.get-underscoreglobalLoc}{{5}{59}}
\newlabel{val:Cil.get-underscorestmtLoc}{{5}{60}}
\newlabel{val:Cil.dExp}{{5}{60}}
\newlabel{val:Cil.dInstr}{{5}{60}}
\newlabel{val:Cil.dGlobal}{{5}{60}}
\newlabel{val:Cil.mapNoCopy}{{5}{60}}
\newlabel{val:Cil.mapNoCopyList}{{5}{60}}
\newlabel{val:Cil.startsWith}{{5}{60}}
\newlabel{val:Cil.endsWith}{{5}{60}}
\newlabel{val:Cil.stripUnderscores}{{5}{60}}
\newlabel{type:Cil.formatArg}{{5}{60}}
\newlabel{val:Cil.d-underscoreformatarg}{{5}{61}}
\newlabel{val:Cil.warnTruncate}{{5}{61}}
\newlabel{val:Cil.envMachine}{{5}{61}}
\newlabel{val:Cil.convertInts}{{5}{61}}
\newlabel{val:Cil.isInteger}{{5}{61}}
\newlabel{val:Cil.truncateInteger64}{{5}{61}}
\newlabel{val:Cil.gccBuiltins}{{5}{61}}
\newlabel{val:Cil.msvcBuiltins}{{5}{61}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Module {\tt  {Formatcil}} : An Interpreter for constructing CIL constructs}{62}}
\newlabel{module:Formatcil}{{6}{62}}
\newlabel{val:Formatcil.cExp}{{6}{62}}
\newlabel{val:Formatcil.cLval}{{6}{62}}
\newlabel{val:Formatcil.cType}{{6}{62}}
\newlabel{val:Formatcil.cInstr}{{6}{62}}
\newlabel{val:Formatcil.cStmt}{{6}{62}}
\newlabel{val:Formatcil.cStmts}{{6}{62}}
\newlabel{val:Formatcil.dExp}{{6}{62}}
\newlabel{val:Formatcil.dLval}{{6}{62}}
\newlabel{val:Formatcil.dType}{{6}{62}}
\newlabel{val:Formatcil.dInstr}{{6}{62}}
\newlabel{val:Formatcil.noMemoize}{{6}{63}}
\newlabel{val:Formatcil.test}{{6}{63}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Module {\tt  {Alpha}} : ALPHA conversion}{63}}
\newlabel{module:Alpha}{{7}{63}}
\newlabel{type:Alpha.undoAlphaElement}{{7}{63}}
\newlabel{type:Alpha.alphaTableData}{{7}{63}}
\newlabel{val:Alpha.newAlphaName}{{7}{63}}
\newlabel{val:Alpha.registerAlphaName}{{7}{63}}
\newlabel{val:Alpha.docAlphaTable}{{7}{63}}
\newlabel{val:Alpha.getAlphaPrefix}{{7}{64}}
\newlabel{val:Alpha.undoAlphaChanges}{{7}{64}}
\@writefile{toc}{\contentsline {section}{\numberline {8}Module {\tt  {Cillower}} : A number of lowering passes over CIL}{64}}
\newlabel{module:Cillower}{{8}{64}}
\newlabel{val:Cillower.lowerEnumVisitor}{{8}{64}}
\@writefile{toc}{\contentsline {section}{\numberline {9}Module {\tt  {Cfg}} : Code to compute the control-flow graph of a function or file.}{64}}
\newlabel{module:Cfg}{{9}{64}}
\newlabel{val:Cfg.computeFileCFG}{{9}{64}}
\newlabel{val:Cfg.clearFileCFG}{{9}{64}}
\newlabel{val:Cfg.cfgFun}{{9}{64}}
\newlabel{val:Cfg.clearCFGinfo}{{9}{64}}
\newlabel{val:Cfg.printCfgChannel}{{9}{64}}
\newlabel{val:Cfg.printCfgFilename}{{9}{64}}
\newlabel{val:Cfg.start-underscoreid}{{9}{64}}
\newlabel{val:Cfg.allStmts}{{9}{64}}
\@writefile{toc}{\contentsline {section}{\numberline {10}Module {\tt  {Dataflow}} : A framework for data flow analysis for CIL code.}{65}}
\newlabel{module:Dataflow}{{10}{65}}
\newlabel{type:Dataflow.action}{{10}{65}}
\newlabel{type:Dataflow.stmtaction}{{10}{65}}
\newlabel{type:Dataflow.guardaction}{{10}{65}}
\newlabel{moduletype:Dataflow.ForwardsTransfer}{{10}{65}}
\newlabel{val:Dataflow.ForwardsTransfer.name}{{10}{65}}
\newlabel{val:Dataflow.ForwardsTransfer.debug}{{10}{65}}
\newlabel{type:Dataflow.ForwardsTransfer.t}{{10}{65}}
\newlabel{val:Dataflow.ForwardsTransfer.copy}{{10}{65}}
\newlabel{val:Dataflow.ForwardsTransfer.stmtStartData}{{10}{66}}
\newlabel{val:Dataflow.ForwardsTransfer.pretty}{{10}{66}}
\newlabel{val:Dataflow.ForwardsTransfer.computeFirstPredecessor}{{10}{66}}
\newlabel{val:Dataflow.ForwardsTransfer.combinePredecessors}{{10}{66}}
\newlabel{val:Dataflow.ForwardsTransfer.doInstr}{{10}{66}}
\newlabel{val:Dataflow.ForwardsTransfer.doStmt}{{10}{66}}
\newlabel{val:Dataflow.ForwardsTransfer.doGuard}{{10}{66}}
\newlabel{val:Dataflow.ForwardsTransfer.filterStmt}{{10}{66}}
\newlabel{module:Dataflow.ForwardsDataFlow}{{10}{67}}
\newlabel{val:Dataflow.ForwardsDataFlow.compute}{{10}{67}}
\newlabel{moduletype:Dataflow.BackwardsTransfer}{{10}{67}}
\newlabel{val:Dataflow.BackwardsTransfer.name}{{10}{67}}
\newlabel{val:Dataflow.BackwardsTransfer.debug}{{10}{67}}
\newlabel{type:Dataflow.BackwardsTransfer.t}{{10}{67}}
\newlabel{val:Dataflow.BackwardsTransfer.pretty}{{10}{67}}
\newlabel{val:Dataflow.BackwardsTransfer.stmtStartData}{{10}{67}}
\newlabel{val:Dataflow.BackwardsTransfer.funcExitData}{{10}{67}}
\newlabel{val:Dataflow.BackwardsTransfer.combineStmtStartData}{{10}{67}}
\newlabel{val:Dataflow.BackwardsTransfer.combineSuccessors}{{10}{68}}
\newlabel{val:Dataflow.BackwardsTransfer.doStmt}{{10}{68}}
\newlabel{val:Dataflow.BackwardsTransfer.doInstr}{{10}{68}}
\newlabel{val:Dataflow.BackwardsTransfer.filterStmt}{{10}{68}}
\newlabel{module:Dataflow.BackwardsDataFlow}{{10}{68}}
\newlabel{val:Dataflow.BackwardsDataFlow.compute}{{10}{68}}
\newlabel{val:Dataflow.find-underscorestmts}{{10}{68}}
\@writefile{toc}{\contentsline {section}{\numberline {11}Module {\tt  {Dominators}} : Compute dominators using data flow analysis}{68}}
\newlabel{module:Dominators}{{11}{68}}
\newlabel{val:Dominators.computeIDom}{{11}{68}}
\newlabel{type:Dominators.tree}{{11}{69}}
\newlabel{val:Dominators.computeDomTree}{{11}{69}}
\newlabel{val:Dominators.getIdom}{{11}{69}}
\newlabel{val:Dominators.dominates}{{11}{69}}
\newlabel{val:Dominators.children}{{11}{69}}
\newlabel{type:Dominators.order}{{11}{69}}
\newlabel{val:Dominators.domTreeIter}{{11}{69}}
\newlabel{val:Dominators.findNaturalLoops}{{11}{69}}
